{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./database/db.js","webpack:///./models/Student.js","webpack:///./routes/student.route.js","webpack:///./server.js","webpack:///external \"body-parser\"","webpack:///external \"cors\"","webpack:///external \"express\"","webpack:///external \"mongoose\"","webpack:///external \"morgan\""],"names":[],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;;AAEA,IAAI,KAAoC,EAAE,EAGzC;AACD;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACXA,iBAAiB,mBAAO,CAAC,0BAAU;AACnC;;AAEA;AACA;AACA,WAAW,eAAe;AAC1B,YAAY,eAAe;AAC3B,aAAa,eAAe;AAC5B,GAAG;AACH,GAAG;AACH;AACA;;;;;;;;;;;;ACXA,eAAe,mBAAO,CAAC,0BAAU;AACjC,YAAY,mBAAO,CAAC,wBAAS;AAC7B;AACA;AACA,oBAAoB,mBAAO,CAAC,8CAAmB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH,CAAC;;AAED;;;;;;;;;;;;AC1EA,cAAc,mBAAO,CAAC,wBAAS;AAC/B,eAAe,mBAAO,CAAC,0BAAU;AACjC,WAAW,mBAAO,CAAC,kBAAM;AACzB,iBAAiB,mBAAO,CAAC,gCAAa;AACtC,aAAa,mBAAO,CAAC,sBAAQ;AAC7B,eAAe,mBAAO,CAAC,uCAAe;;AAEtC;AACA,qBAAqB,mBAAO,CAAC,+DAA8B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,IAA+B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,2CAA2C,eAAe;AAC1D;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,IAAI;AACJ;;;;;;;;;;;;AC1DA,wC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,qC;;;;;;;;;;;ACAA,mC","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./server.js\");\n","var db;\n\nif (process.env.NODE_ENV == \"production\") {\n  db =\n    \"mongodb+srv://ted:ted@cluster0-ocswh.mongodb.net/<dbname>?retryWrites=true&w=majority\";\n} else {\n  db = \"mongodb://localhost:27017/myproject\";\n}\n\nmodule.exports = {\n  db,\n};\n","const mongoose = require(\"mongoose\");\nconst Schema = mongoose.Schema;\n\nlet studentSchema = new Schema(\n  {\n    name: { type: String },\n    email: { type: String },\n    rollno: { type: Number },\n  },\n  { collection: \"students\" }\n);\nmodule.exports = mongoose.model(\"student\", studentSchema);\n","let mongoose = require(\"mongoose\"),\n  express = require(\"express\"),\n  router = express.Router();\n//student model\nlet studentSchema = require(\"../models/Student\");\n// create student\nrouter.route(\"/create-student\").post((req, res, next) => {\n  studentSchema.create(req.body, (error, data) => {\n    if (error) {\n      res.status(500).json({\n        message: error.message,\n      });\n    } else {\n      res.json({\n        id: data.id,\n      });\n    }\n  });\n});\n// READ Students\nrouter.route(\"/\").get((req, res) => {\n  studentSchema.find((error, data) => {\n    if (error) {\n      res.status(500).json({\n        message: error.message,\n      });\n    } else {\n      console.log(data)\n      res.json(data);\n    }\n  });\n});\n\n// Get Single Student\nrouter.route(\"/edit-student/:id\").get((req, res) => {\n  studentSchema.findById(req.params.id, (error, data) => {\n    if (error) {\n      return next(error);\n    } else {\n      res.json(data);\n    }\n  });\n});\n// Update Student\nrouter.route(\"/update-student/:id\").put((req, res, next) => {\n  studentSchema.findByIdAndUpdate(\n    req.params.id,\n    {\n      $set: req.body,\n    },\n    (error, data) => {\n      if (error) {\n        return next(error);\n        console.log(error);\n      } else {\n        res.json(data);\n        console.log(\"Student updated successfully !\");\n      }\n    }\n  );\n});\n// Delete Student\nrouter.route(\"/delete-student/:id\").delete((req, res, next) => {\n  studentSchema.findByIdAndRemove(req.params.id, (error, data) => {\n    if (error) {\n      return next(error);\n    } else {\n      res.status(200).json({\n        msg: data,\n      });\n    }\n  });\n});\n\nmodule.exports = router;\n","let express = require(\"express\");\nlet mongoose = require(\"mongoose\");\nlet cors = require(\"cors\");\nlet bodyParser = require(\"body-parser\");\nlet morgan = require(\"morgan\");\nlet dbConfig = require(\"./database/db\");\n\n// Express Route\nconst studentRoute = require(\"../back/routes/student.route\");\n// Connecting mongoDB Database\nmongoose.Promise = global.Promise;\nconsole.log(\"Attempting db connection \", dbConfig.db);\nmongoose\n  .connect(dbConfig.db, {\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n  })\n  .then(\n    () => {\n      console.log(\"Database sucessfully connected!\");\n    },\n    (error) => {\n      console.log(\"Database connection failed : \", error);\n    }\n  );\n  const db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', function() {\n  console.log(\"we're connected!\")\n});\nconst app = express();\nif (process.env.NODE_ENV !== \"test\") {\n  app.use(morgan(\"tiny\"));\n}\napp.use(bodyParser.json());\napp.use(\n  bodyParser.urlencoded({\n    extended: true,\n  })\n);\napp.use(cors());\napp.use(\"/health\", (req, res) => res.send({ status: \"ok\" }));\napp.use(\"/students\", studentRoute);\n// PORT\nconst port = process.env.PORT || 4000;\nconst server = app.listen(port, () => {\n  console.log(\"Connected to port \" + port);\n});\n// 404 Error\n// app.use((req, res, next) => {\n//   next(createError(404));\n// });\n\n// app.use(function (err, req, res, next) {\n//   console.error(err.message);\n//   if (!err.statusCode) err.statusCode = 500;\n//   res.status(err.statusCode).send(err.message);\n// });\nmodule.exports = app;\n","module.exports = require(\"body-parser\");","module.exports = require(\"cors\");","module.exports = require(\"express\");","module.exports = require(\"mongoose\");","module.exports = require(\"morgan\");"],"sourceRoot":""}